package wave;
import org.lwjgl.input.Mouse;

import java.awt.Font;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import org.newdawn.slick.AppGameContainer;
import org.newdawn.slick.BasicGame;
import org.newdawn.slick.Color;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Image;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.TrueTypeFont;
import org.newdawn.slick.geom.Vector2f;
import org.newdawn.slick.opengl.Texture;
import org.newdawn.slick.opengl.TextureLoader;

import grid.Waypoint;
import java.util.*;
import playerObjects.Icon;

public class Tutorial {
 static int i = 0;

public static void tutorial(int milli) throws FileNotFoundException, IOException
{
    //Does this need to be made a method instead that ccalls milli as a parameter in order to move every second?
    //getpath uses grid locations, not pixel locations
    //Does Vector2f use grid locations or pixel locations?
    Vector2f startingLoc = new Vector2f(0, 8);
//    Vector2f endingLoc = new Vector2f(8, 8);
  //  ArrayList<Waypoint> locs = new ArrayList<Waypoint>();
    
    int tot = 0;
    tot += milli;
    Texture Elfy = TextureLoader.getTexture("jpg", new FileInputStream(new File("./res/Blue1.jpg")));
    Vector2f size = new Vector2f(1, 1);
   // Icon img = new Icon(new Image(Elfy), size);
    Vector2f loc = startingLoc;
    Vector2f vel = new Vector2f(0, 0);
   float x = 0;
   float y = 0;
   while(tot == 1)
   {
    if((i %= 2) == 0)
    {
        y += 1;
    }
    else
    {
        x += 1;
    }
    }
   i++;
   loc = new Vector2f((loc.x + x), (loc.y + y));
   //Doesn't work because Waypoint is non-functional
    /*
    Waypoint way = gr.getPath(startingLoc, endingLoc);
    
    //Stores all the waypoints in the path in an arraylist
    while(way.hasParent())
    {
    	Waypoint parent = way.getParent();
    	locs.add(parent);
    	way = parent;
    }
    
    int count = 0;
    int length = locs.size();
    
    Vector2f wayloc = locs.get(i).getLoc();
    //Do I replace gr.getGrid().length with gr.getGrid().width for y...?
    loc = new Vector2f((loc.x + wayloc.x * gr.getSize().x/gr.getGrid().length),(loc.y + wayloc.y * gr.getSize().y/gr.getGrid().length));
    */
    
    
  //  loc = loc.scale(milli/1000);
    
    
    
    //Moves enemy to the closest waypoint 
    //Apparently I don't need this?
    /*
    for(int i = length; i = 0; i--)
    {
        Enemy e = new HouseElf(loc, vel, size, img);
        Vector2f wayloc = locs.get(i).getLoc();
        loc = e.getDirection(loc, wayloc);
        e.render();
    }
    */
}
}
